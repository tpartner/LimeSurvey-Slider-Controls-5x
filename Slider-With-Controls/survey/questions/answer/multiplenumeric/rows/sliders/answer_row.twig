
{#
/**
 * Multiple short texts question, item input text Html
 * @var $tip
 * @var $alert
 * @var $maxlength
 * @var $tiwidth
 * @var $extraclass
 * @var $sDisplayStyle
 * @var $prefix
 * @var $myfname
 * @var $labelText
 * @var $prefix
 * @var $kpclass
 * @var $rows
 * @var $checkconditionFunction
 * @var $dispVal
 * @var $suffix
 * @var $sUnformatedValue
 * @var $slider_min
 * @var $slider_max
 * @var $slider_step
 * @var $slider_default
 * @var $slider_orientation
 * @var $slider_handle
 * @var $slider_reset
 * @var $slider_reversed
 * @var $sSeparator
 */
#}

{###############
NOTE: 
	THE QUESTION ATTRIBUTES ARE NOT AVAILABLE HERE!
	NEED BUG 18100 FIXED!
###############}

{% set down_text = question_template_attribute.down_text %}
{% if down_text == '' %}
	{% set down_text = '-' %}
{% endif %}
{% set up_text = question_template_attribute.up_text %}
{% if up_text == '' %}
	{% set up_text = '+' %}
{% endif %}

<li id='javatbd{{ myfname }}' class="question-item answer-item numeric-item text-item slider-item form-group {{ extraclass }}{% if alert %} ls-error-mandatory has-error {% endif %}">
	<label id="label-{{ myfname }}" class='control-label col-xs-12 col-sm-{{ sLabelWidth }}{% if sLabelWidth == 0 %} hidden{% endif %}' for="answer{{myfname}}">
		{{ processString(labelText) }}
	</label>

	<div class="col-xs-12 col-sm-{{ sInputContainerWidth }} container-fluid">
		{% if sliderleft is not empty %}
			<div class='col-xs-12 col-sm-2 slider-left text-right'>{{ sliderleft }}</div>
		{% endif %}

		<div class="slider-container slider-{{slider_orientation}} ls-input-group col-xs-12 col-sm-{{sliderWidth}}" id="answer{{myfname}}slid-container">
			{{ C.Html.textField( myfname ~ 'slid', dispVal ,{
					'class': 'form-control answer-item numeric-item hidden cs-slider-input',
					'id' : "answer" ~ myfname ~ "slid", 
					'aria-labelledby' : 'label-' ~ myfname, 
					'data-cs-separator' : sSeparator, 
					'data-cs-step' : slider_step, 
					'data-cs-max' : slider_max, 
					'data-cs-min' : slider_min 
				})
			}}
			{{ C.Html.textField( myfname, dispVal ,{
					'class': 'form-control answer-item numeric-item hidden slider-untouched',
					'id' : "answer" ~ myfname, 
				})
			}}              
			
			
			{% if slider_showminmax %}
				<div class="slider-min-max-container">
					<div class='help-block slider-min-block'> {{ slider_reversed == 'false' ? slider_min : slider_max}}</div>
					<div class='help-block slider-max-block'> {{ slider_reversed == 'false' ? slider_max : slider_min}}</div>
				</div>
			{% endif %}
			{% if slider_reset %}
				<div class="ls-input-group-extra ls-no-js-hidden ls-input-group-reset">
				<button id="answer{{ myfname }}_resetslider" class='btn btn-default btn-sm btn-slider-reset'>
					<i class='fa fa-times slider-reset-icon' aria-hidden='true'></i><span class="slider-reset-text">&nbsp;{{ gT("Reset") }}</span>
				</button>
				</div>
			{% endif %}
		</div>
		{% if sliderright is not empty %}
			<div class='col-xs-12 col-sm-2 slider-right text-left'>{{ sliderright }}</div>
		{% endif %}
		<div class="control-slider-separator clearfix"></div>
		<div class="control-slider-buttons">
			<button type="button" class="slider-button down btn btn-md btn-primary">{{down_text}}</button>
			<button type="button" class="slider-button up btn btn-md btn-primary">{{up_text}}</button>
		</div>
	</div>
</li>

{% set script %}
    window.activeSliders = window.activeSliders || {};
    if(window.activeSliders.s{{myfname}}){
        window.activeSliders.s{{myfname}}.unsetSlider();
        delete window.activeSliders.s{{myfname}};
    }
    window.activeSliders.s{{myfname}} = new LSSlider({
        'qid': "{{qid}}",
        'element': "{{myfname}}slid",
        'rootElement': "{{myfname}}",
        'labelElement': "label-{{ myfname }}",
        'value' : '{{slider_value}}',
        'min' : {{slider_min}},
        'max' : {{slider_max}},
        'step' : {{slider_step}},
        'orientation' : "{{slider_orientation}}",
        'handle' : "{{slider_handle}}",
        'tooltip' : 'always',
        'reset' : "{{slider_reset}}",
        'prefix' : "{{ processString(prefix,1) }}",
        'suffix' : "{{ processString(suffix,1) }}",
        'separator' : "{{sSeparator}}",
        'number' : true,
        'integer' : {{integeronly}},
        'position' : parseInt({{slider_position}}),
        'custom_handle' : "{{slider_custom_handle}}",
        'setPosition' : "{{slider_default_set}}",
        'reversed' : {{slider_reversed}},
    });
    window.activeSliders.s{{myfname}}.init();
    
	initSliderControls(
        '{{myfname}}slid', 
        {{question_template_attribute.scrolling}},
        '{{question_template_attribute.scrolling_interval}}',
        '{{question_template_attribute.callout_prefix}}',
        '{{question_template_attribute.callout_suffix}}'
    );
{% endset %}
{{ registerScript( 'SliderQuestion'~myfname, script, 'POS_POSTSCRIPT') }}

<!-- end of answer_row -->

